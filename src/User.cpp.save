#include "User.h"

User::User()
{

}

User::~User()
{
}

void User::setMyId(int MyId_)
{
    this->my_id = MyId_;
}

void User::setName(std::string name_)
{
    this->name = name_;
}

void User::setSurname(std::string surname_)
{
    this->surname = surname_;
}

void User::setAdministator(bool adm)
{
    this->administator = adm;
}

const int User::getMyId()
{
    return this->my_id;
}

const std::string User::getName()
{
    return this->name;
}

const std::string User::getSurname()
{
    return this->surname;
}

const bool User::getAdministator()
{
    return this->administator;
}

void User::logIn(int i)
{
    Baza_danych baza;
    std::string questionToDatabase = "SELECT * FROM pracownicy WHERE ID_Pracownika = " + std::to_string(i);
    MYSQL_RES* result = baza.wyslij_zapytanie(questionToDatabase);

    MYSQL_ROW row;
    row = mysql_fetch_row(result);
    mysql_free_result(result);

    if(row!=NULL)
    {
        this->my_id = atoi(row[0]);
        this->name = row[1];
        this->surname = row[2];
        this->administator = row[6];
    }
    else
    {
        message = gtk_message_dialog_new(NULL,GTK_DIALOG_MODAL, GTK_MESSAGE_ERROR, GTK_BUTTONS_OK, "Nie posiadamy informacji o tym pracowniku");
        gtk_window_set_title(GTK_WINDOW(message), "Error");
        gtk_dialog_run(GTK_DIALOG(message));
        gtk_widget_destroy(message);
    }
}

void User::logOff()
{
    my_id = 0;
    name = "";
    surname = "";
    administator = false;
}

void User::nowy_pracownik()
{
    this->zbuduj_okno_informacji_o_pracowniku();
    while(1)
    {
        switch(gtk_dialog_run(GTK_DIALOG(message)))
        {
            case 1:
                {
                    if(przetworz_dane()==true)
                    {
                        break;
                    }
                    else continue;
                }
            case 3:
                {
                    break;
                }
            case GTK_RESPONSE_DELETE_EVENT:
                {
                    break;
                }
        }
        break;
    }
    gtk_widget_destroy(message);
}

void User::modyfikuj_dane_pracownika(int i)
{
    //Baza_danych baza;
    //std::string zapytanie = 

}
std::string User::sprawdz_czy_dane_poprawne(std::string imie_nazwisko,std::string miasto,std::string ulica,std::string e_mail,std::string nr_tel,std::string admin)
{
    if(imie_nazwisko.find(' ')==std::string::npos)
    {
        return "Podaj poprawne imie i nazwisko";
    }

    if(e_mail.find('@')==std::string::npos)
    {
        return "Podaj poprawny e-mail";
    }

    if(nr_tel.length()!=9)
    {
        return "Podaj poprawny nr_tel";
    }
return "OK";
}

bool User::przetworz_dane()
{
    std::string Imie_i_nazwisko = (std::string)gtk_entry_get_text(GTK_ENTRY(E_imie_i_nazwisko));
    std::string Miasta_zamieszkania = (std::string)gtk_entry_get_text(GTK_ENTRY(E_miasto_zamieszkania));
    std::string Ulica_i_numer = (std::string)gtk_entry_get_text(GTK_ENTRY(E_adres_zamieszkania));
    std::string A_email = (std::string)gtk_entry_get_text(GTK_ENTRY(E_email));
    std::string nr_tel = (std::string)gtk_entry_get_text(GTK_ENTRY(E_tel));
    std::string admin = (std::string)gtk_entry_get_text(GTK_ENTRY(E_administrator));

    std::string sprawdzenie = sprawdz_czy_dane_poprawne(Imie_i_nazwisko,Miasta_zamieszkania,Ulica_i_numer,A_email,nr_tel,admin);
    if(sprawdzenie=="OK")
    {
        
        return true;
    }
    else
    {
        gtk_label_set_text(GTK_LABEL(InfoAboutWrongData),sprawdzenie.c_str());
        return false;
    }
}

void User::zbuduj_okno_informacji_o_pracowniku()
{
    message = gtk_dialog_new_with_buttons("Message",NULL,GTK_DIALOG_DESTROY_WITH_PARENT,"_ACCEPT", GTK_BUTTONS_OK, "_CANCEL",GTK_BUTTONS_CANCEL,NULL);
    GtkWidget* content_area;
    content_area = gtk_dialog_get_content_area(GTK_DIALOG(message));

    tabela = gtk_table_new(8, 2, TRUE);
    gtk_table_set_row_spacings(GTK_TABLE(tabela), 2);
    gtk_table_set_col_spacings(GTK_TABLE(tabela), 2);

    gtk_container_add(GTK_CONTAINER(content_area),tabela);
    ///DOdawanie nagłówka
    L_naglowek = gtk_label_new("Dodawanie nowego pracownika");
    gtk_table_attach_defaults(GTK_TABLE(tabela), L_naglowek, 0, 2, 0, 1);

    ///Dodawanie Label Imie i nazwisko
    L_imie_i_nazwisko = gtk_label_new("Imie i nazwisko:");
    gtk_table_attach_defaults(GTK_TABLE(tabela), L_imie_i_nazwisko, 0, 1, 1, 2);
    ///Dodawanie Entry na imie
    E_imie_i_nazwisko = gtk_entry_new();
    gtk_table_attach_defaults(GTK_TABLE(tabela), E_imie_i_nazwisko, 1, 2,1,2);

    ///Dodanie Label miasto zamieszkania
    L_miasto_zamieszkania = gtk_label_new("Miasto zamieszakania:");
    gtk_table_attach_defaults(GTK_TABLE(tabela), L_miasto_zamieszkania, 0, 1,2,3);
    ///Dodanie Entry na zamieszkanie
    E_miasto_zamieszkania = gtk_entry_new();
    gtk_table_attach_defaults(GTK_TABLE(tabela), E_miasto_zamieszkania, 1, 2,2,3);

    ///Dodanie Label Ulica i numer mieszkania
    L_adres_zamieszkania = gtk_label_new("Ulica i numer mieszkania:");
    gtk_table_attach_defaults(GTK_TABLE(tabela), L_adres_zamieszkania, 0, 1,3,4);
    ///Dodanie Entry na Ulice i numer mieszkania
    E_adres_zamieszkania = gtk_entry_new();
    gtk_table_attach_defaults(GTK_TABLE(tabela), E_adres_zamieszkania, 1, 2,3,4);

    ///Dodanie Label email
    L_email = gtk_label_new("Adres e-mail:");
    gtk_table_attach_defaults(GTK_TABLE(tabela), L_email, 0, 1,4,5);
    ///Dodanie Entry na email
    E_email = gtk_entry_new();
    gtk_table_attach_defaults(GTK_TABLE(tabela), E_email, 1, 2,4,5);

    ///Dodanie Label email
    L_tel = gtk_label_new("Nr Telefonu:");
    gtk_table_attach_defaults(GTK_TABLE(tabela), L_tel, 0, 1,5,6);
    ///Dodanie Entry na email
    E_tel = gtk_entry_new();
    gtk_table_attach_defaults(GTK_TABLE(tabela), E_tel, 1, 2,5,6);

    ///Dodanie Label administator
    L_administrator = gtk_label_new("Prawa Administatora(TAK/NIE):");
    gtk_table_attach_defaults(GTK_TABLE(tabela), L_administrator, 0, 1,6,7);
    ///Dodanie Entry administrator
    E_administrator = gtk_entry_new();
    gtk_table_attach_defaults(GTK_TABLE(tabela), E_administrator, 1, 2,6,7);

    InfoAboutWrongData= gtk_label_new("");
    gtk_table_attach_defaults(GTK_TABLE(tabela),InfoAboutWrongData, 0, 2,7,8);

    gtk_widget_show_all(message);
}
